{"version":3,"sources":["node_modules/browser-pack/_prelude.js","common.ts","logger.ts","testGui.ts"],"names":[],"mappings":"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","file":"testGui.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\nimport * as process from 'process';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { exec } from 'child_process';\nimport * as glob from 'glob';\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as moment from 'moment';\nimport * as JSON5 from 'json5';\nimport Log from './logger';\n\nexport var NOW : moment.Moment;\nexport var TAG : string;\nexport var hasErrors : boolean = false;\nexport const tagFormat =  'YYYYMMDD_HHmm';\nexport const tagPattern = '????????_????';\nexport const tagPatternRegex = '[0-9]{8}_[0-9]{4}';\n\nexport function init(p:{log:Log, tag?:string}) : void\n{\n\tTAG =  ( (p.tag != null) ? p.tag : moment(new Date()).format(tagFormat) );\n\tNOW = moment( TAG, tagFormat );  // NB: 'NOW' is trimmed of the 'seconds' part\n\tp.log.log( 'TAG:', TAG, NOW.toISOString() );\n\n\tlet exitHandler = function(options,err)\n\t\t{\n\t\t\tp.log.output();\n\t\t\tswitch( options.mode )\n\t\t\t{\n\t\t\t\tcase \"on exit\":\n\t\t\t\t\tif( hasErrors )\n\t\t\t\t\t\tprocess.exit( -1 );\n\t\t\t\t\treturn;\n\t\t\t\tcase \"on uncaughtException\":\n\t\t\t\t\tconsole.log( '*** uncaughtException', err );\n\t\t\t\t\tprocess.exit( -1 );\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log( '*** Unknown exit mode', options, err );\n\t\t\t\t\tprocess.exit( -1 );\n\t\t\t}\n\t\t};\n\tprocess.on( 'exit', exitHandler.bind(null, {mode:'on exit'}) );\n\tprocess.on( 'uncaughtException', exitHandler.bind(null,{mode:'on uncaughtException'}) );\n\n\tif( typeof(window) === 'undefined' )\n\t{\n\t\tp.log.log( 'In NodeJS application => set up a fake DOM/JQuery/Knockout environment' );\n\t\t// https://stackoverflow.com/questions/1801160/can-i-use-jquery-with-node-js\n\t\tconst jsdom = require( 'jsdom' );\n\t\tconst jquery = require( 'jquery' );\n\t\tconst knockout = require( 'knockout' );\n\t\tconst dom = new jsdom.JSDOM( '<html><body></body></html>' );\n\n\t\t(<any>global).window = dom.window;\n\t\t(<any>global).document = dom.window.document;\n\t\t(<any>global).$ = jquery( window );\n\t\t(<any>global).ko = knockout;\n\t}\n}\n\nexport function setHasErrors() : void\n{\n\thasErrors = true;\n}\n\nexport function sleep(ms:number) : Promise<void>\n{\n\treturn new Promise( callback=>setTimeout(callback, ms) );\n}\n\nexport function run(p:{ log:Log, command:string, logstds?:boolean, stdin?:string, [key:string]:any }) : Promise<{stdout:string,stderr:string}>\n{\n\tp.log.log( 'Create command' );\n\tlet command = p.command;\n\tObject.keys(p).forEach( function(key)\n\t\t{\n\t\t\tswitch( key )\n\t\t\t{\n\t\t\t\tcase 'log':\n\t\t\t\tcase 'command':\n\t\t\t\tcase 'logstds':\n\t\t\t\tcase 'stdin':\n\t\t\t\t\t// Regular parameter\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Command's parameter\n\t\t\tcommand = command.replace( '{'+key+'}', p[key] );\n\t\t});\n\n\tfunction logStds(stdout:string, stderr:string) : void\n\t{\n\t\tp.log.child( 'stdout' ).logLines( stdout );\n\t\tp.log.child( 'stderr' ).logLines( stderr );\n\t}\n\n\treturn new Promise<{stdout:string,stderr:string}>( function(resolve, reject)\n\t\t{\n\t\t\tp.log.log( 'launch:', command );\n\t\t\tconst ps = exec( command, function(err, stdout, stderr)\n\t\t\t\t{\n\t\t\t\t\tif( err != null )\n\t\t\t\t\t{\n\t\t\t\t\t\tlogStds( stdout, stderr );\n\t\t\t\t\t\treject( err );  // i.e. promise's 'throw'\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( (p.logstds == null) || (p.logstds == true) )\n\t\t\t\t\t\tlogStds( stdout, stderr );\n\t\t\t\t\tp.log.log( 'exited' );\n\t\t\t\t\tresolve({ stdout:stdout, stderr:stderr });\n\t\t\t\t} );\n\t\t\tif( p.stdin != null )\n\t\t\t{\n\t\t\t\tp.log.log( `Write '${p.stdin.length}' characters to stdin` );\n\t\t\t\tconst rc = ps.stdin.write( p.stdin );\n\t\t\t\tps.stdin.end();\n\t\t\t\tp.log.log( `Write rc='${rc}'` );\n\t\t\t}\n\t\t} );\n}\n\nexport function ls(path:string) : Promise<string[]>\n{\n\treturn new Promise<string[]>( (resolve,reject)=>\n\t\t{\n\t\t\tfs.readdir( path, (err,items)=>\n\t\t\t\t{\n\t\t\t\t\tif( err != null )\n\t\t\t\t\t\treject( err );\n\t\t\t\t\telse\n\t\t\t\t\t\tresolve( items );\n\t\t\t\t} );\n\t\t} );\n}\n\nexport async function dirPattern(p:{ log:Log, dir:string, pattern:string, remoteServer?:string }) : Promise<string[]>\n{\n\tif( p.remoteServer == null )\n\t{\n\t\t// Simple local search\n\t\tp.log.log( 'Local search:', path.join(p.dir, p.pattern) );\n\t\treturn new Promise<string[]>( (resolve, reject)=>\n\t\t\t{\n\t\t\t\tglob.Glob( p.pattern, { cwd:p.dir }, (err,files)=>\n\t\t\t\t\t{\n\t\t\t\t\t\tif( err != null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tp.log.log( 'Error:', err );\n\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// p.log.log( 'Found:', files );\n\t\t\t\t\t\t\tp.log.log( 'Found', files.length, 'entries' );\n\t\t\t\t\t\t\tresolve( files );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t} );\n\t}\n\telse\n\t{\n\t\t// Use SSH\n\t\tp.log.log( 'Remote search:', path.join(p.dir, p.pattern), 'on server', p.remoteServer );\n\n\t\ttry\n\t\t{\n\t\t\tconst dirPattern = path.join( p.dir, p.pattern );\n\t\t\tconst {stdout,stderr} = await run({ log:p.log, logstds:false, command:'ssh \"{HOSTNAME}\" ls -d \"{DIR_PATTERN}\"', 'HOSTNAME':p.remoteServer, 'DIR_PATTERN':dirPattern });\n\t\t\tconst list = stdout.split( '\\n' );\n\t\t\treturn list.map( str=>path.basename(str) ).filter( str=> (str != null) && (str.length > 0) );\n\t\t}\n\t\tcatch\n\t\t{\n\t\t\t// e.g. no such file or directory ...\n\t\t\treturn [];\n\t\t}\n\t}\n}\n\ntype DirNameOrPath = { path :string,\tdir?:never,\tname?:never }\n\t\t\t\t\t| { path?:never,\tdir :string,name :string };\nexport function stat(p:DirNameOrPath) : Promise<fs.Stats>\n{\n\tconst path_ = (p.path != null) ? p.path : path.join( p.dir, p.name );\n\treturn new Promise<fs.Stats>( (resolve,reject)=>\n\t\t{\n\t\t\tfs.stat( path_, (err, stats)=>\n\t\t\t\t{\n\t\t\t\t\tif( err )\n\t\t\t\t\t\treject( err );\n\t\t\t\t\telse\n\t\t\t\t\t\tresolve( stats );\n\t\t\t\t} )\n\t\t} );\n}\n\nexport function exists(p:DirNameOrPath) : Promise<boolean>\n{\n\tconst path_ = (p.path != null) ? p.path : path.join( p.dir, p.name );\n\treturn new Promise<boolean>( (resolve)=>\n\t\t{\n\t\t\tfs.stat( path_, (err, stats)=>\n\t\t\t\t{\n\t\t\t\t\tresolve( (err == null) ? true : false );\n\t\t\t\t} )\n\t\t} );\n}\n\nexport function mv(p:{ srcPath:string, dstPath:string }) : Promise<void>\n{\n\treturn new Promise<void>( (resolve,reject)=>\n\t\t{\n\t\t\tfs.rename( p.srcPath, p.dstPath, (err)=>\n\t\t\t\t{\n\t\t\t\t\t(err == null) ? resolve() : reject(err);\n\t\t\t\t} );\n\t\t} );\n}\n\nexport function mkdir(p:DirNameOrPath) : Promise<void>\n{\n\tconst path_ = (p.path != null) ? p.path : path.join( p.dir, p.name );\n\treturn new Promise<void>( (resolve,reject)=>\n\t\t{\n\t\t\tfs.mkdir( path_, (err)=>\n\t\t\t\t{\n\t\t\t\t\t(err == null) ? resolve() : reject(err);\n\t\t\t\t} );\n\t\t} )\n}\n\nexport function rm(p:DirNameOrPath) : Promise<void>\n{\n\tconst path_ = (p.path != null) ? p.path : path.join( p.dir, p.name );\n\treturn new Promise<void>( (resolve,reject)=>\n\t\t{\n\t\t\tfs.unlink( path_, (err)=>\n\t\t\t\t{\n\t\t\t\t\tif( err != null )\n\t\t\t\t\t\treject( err );\n\t\t\t\t\telse\n\t\t\t\t\t\tresolve();\n\t\t\t\t} );\n\t\t} );\n}\n\nexport function rmdir(p:DirNameOrPath) : Promise<void>\n{\n\tconst path_ = (p.path != null) ? p.path : path.join( p.dir, p.name );\n\treturn new Promise<void>( (resolve,reject)=>\n\t\t{\n\t\t\tfs.rmdir( path_, (err)=>\n\t\t\t\t{\n\t\t\t\t\t(err == null) ? resolve() : reject(err);\n\t\t\t\t} );\n\t\t} );\n}\n\nexport async function rmrf(p:DirNameOrPath) : Promise<void>\n{\n\tconst path_ = (p.path != null) ? p.path : path.join( p.dir, p.name );\n\tconst stat_ = await stat( p );\n\tif( stat_.isDirectory() )\n\t{\n\t\t// Directory\n\t\tconst items = await ls( path_ );\n\t\tfor( let i=0; i<items.length; ++i )\n\t\t{\n\t\t\t// Recurse\n\t\t\tconst item = items[ i ];\n\t\t\tawait rmrf({ dir:path_, name:item });\n\t\t}\n\n\t\t// This one\n\t\tawait rmdir( p );\n\t}\n\telse\n\t{\n\t\t// File\n\t\tawait rm( p );\n\t}\n}\n\nexport async function readFile(p:{ filePath:string }) : Promise<string>\n{\n\treturn new Promise<string>( (resolve,reject)=>\n\t\t{\n\t\t\tfs.readFile( p.filePath, 'utf8', (err,content)=>\n\t\t\t{\n\t\t\t\tif( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse\n\t\t\t\t\tresolve( content );\n\t\t\t} );\n\t\t} );\n}\n\nexport async function writeFile(p:{ filePath:string, stringContent:string }) : Promise<void>\n{\n\treturn new Promise<void>( (resolve,reject)=>\n\t\t{\n\t\t\tfs.writeFile( p.filePath, p.stringContent, (err)=>\n\t\t\t{\n\t\t\t\tif( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse\n\t\t\t\t\tresolve();\n\t\t\t} );\n\t\t} );\n}\n\n/** https://json5.org/ */\nexport async function readJSON<T>(p:{ filePath?:string, jsonText?:string }) : Promise<T>\n{\n\tlet jsonText = p.jsonText;\n\n\tif( p.filePath != null )\n\t\tjsonText = await readFile({ filePath:p.filePath });\n\n\tif( jsonText == null )\n\t\tthrow `'readJSON()': Missing JSON source`;\n\n\treturn JSON5.parse( jsonText );\n}\n\nexport async function writeJSON(p:{ filePath:string, content:any }) : Promise<void>\n{\n\tconst json = JSON.stringify( p.content, null, '\\t' );\n\tawait writeFile({ filePath:p.filePath, stringContent:json });\n}\n\n/** https://stackoverflow.com/questions/10420352/converting-file-size-in-bytes-to-human-readable-string */\nexport function humanFileSize(bytes:number, si?:boolean) : string\n{\n\tif( si == null )\n\t\tsi = false;\n\tconst thresh = si ? 1000 : 1024;\n\tif( Math.abs(bytes) < thresh )\n\t\treturn bytes + ' B';\n\n\tconst units = si\n\t\t? ['kB','MB','GB','TB','PB','EB','ZB','YB']\n\t\t: ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n\tlet u = -1;\n\tdo\n\t{\n\t\tbytes /= thresh;\n\t\t++u;\n\t} while( Math.abs(bytes) >= thresh && u < units.length - 1 );\n\treturn bytes.toFixed(1)+' '+units[u];\n}\n\nexport async function readFileLines(filePath:string) : Promise<string[]>\n{\n\tconst buffer = await fs.promises.readFile( filePath );\n\tconst txt = buffer.toString();\n\tconst lines = txt.match( /[^\\r\\n]+/g ) ?? [];\n\treturn lines;\n}\n\nexport function isNullOrWhiteSpace(str?:string) : boolean\n{\n\tif( str == null )\n\t\treturn true;\n\tif( str.length == 0 )\n\t\treturn true;\n\tif( str.trim() == '' )\n\t\treturn true;\n\treturn false;\n}\n\nexport async function forEach<T>(t:T[], callback:(item:T,i:number)=>Promise<void>) : Promise<void>\n{\n\tfor( let i=0; i<t.length; ++i )\n\t\tawait callback( t[i], i );\n}\n\nexport function arraySum<T>(a:T[], f:(e:T)=>number) : number\n{\n\tlet rc = 0;\n\ta.forEach( function(e)\n\t\t{\n\t\t\trc += f(e);\n\t\t} );\n\treturn rc;\n}\n\nexport function arrayToDictionary<T>(a:T[], keyCast:(v:T)=>string) : {[key:string]:T}\n{\n\tconst dict : {[key:string]:T} = {};\n\ta.forEach( v=>\n\t\t{\n\t\t\tdict[ keyCast(v) ] = v\n\t\t} );\n\treturn dict;\n}\n\n/** Split the specified array into multiple arrays according to a grouping key */\nexport function arrayToListOfArrays<T>(a:T[], groupingKeyCast:(v:T)=>string) : T[][]\n{\n\t// Group items into an object \"key->T[]\"\n\tconst grouped = a.reduce<{[key:string]:T[]}>( (accu,current)=>\n\t{\n\t\tconst key = groupingKeyCast( current );\n\t\tlet list = accu[ key ];\n\t\tif( list == null )\n\t\t{\n\t\t\tlist = [];\n\t\t\taccu[ key ] = list;\n\t\t}\n\t\tlist.push( current );\n\t\treturn accu;\n\t}, {} );\n\n\t// From the object, create arrays\n\tconst list : T[][] = [];\n\tfor( let key in grouped )\n\t\tlist.push( grouped[key] );\n\n\treturn list;\n}\n\n/** Throttles the concurrent execution of Promises (e.g. the reduce the number of concurrent requests to a server) */\nexport class TasksThrotther\n{\n\tprivate readonly\tlimit\t\t: number;\n\tprivate\t\t\t\trunnings\t: number = 0;\n\tprivate\t\t\t\tthrottled\t: (()=>void)[] = [];\n\n\tconstructor(limit:number)\n\t{\n\t\tthis.limit = limit;\n\t}\n\n\t/** nb: all the magic is here... */\n\tpublic async do<T>(callback:()=>Promise<T>) : Promise<T>\n\t{\n\t\tconst self = this;\n\n\t\t++ self.runnings;\n\n\t\tif( self.runnings <= self.limit )\n\t\t{\n\t\t\t// Execute immediately\n\t\t\tconst rc = await callback();\n\t\t\tself.checkNext();\n\t\t\treturn rc;\n\t\t}\n\n\t\t// Push a promise in 'throttled' & wait for it\n\t\tconst waitFor = new Promise<void>( (resolve)=>\n\t\t\t{\n\t\t\t\tself.throttled.push( resolve );\n\t\t\t} );\n\t\tawait waitFor;\n\n\t\t// Now we can execute\n\t\tconst rc = await callback();\n\t\tself.checkNext();\n\t\treturn rc;\n\t}\n\n\tprivate checkNext() : void\n\t{\n\t\tconst self = this;\n\n\t\t-- self.runnings;\n\t\tconst next = self.throttled.shift();\n\t\tif( next != null )\n\t\t\tnext();\n\t}\n}\n\nexport namespace url\n{\n\t/** Transform a dictionary like {foo:'bar',hello:'world'} to a parameters string like 'foo=bar&hello=world' */\n\texport function stringifyParameters(parms:{[key:string]:any}) : string\n\t{\n\t\tvar pairs = <string[]>[];\n\t\tObject.keys(parms).forEach( function(key)\n\t\t\t{\n\t\t\t\tlet value = parms[ key ];\n\t\t\t\tkey = encodeURIComponent( key );\n\n\t\t\t\tif( (value == null) || (typeof(value) === 'string') || (typeof(value) === 'number') || (typeof(value) === 'boolean') )\n\t\t\t\t\t{/*Keep as-is*/}\n\t\t\t\telse\n\t\t\t\t\t// Convert to JSON\n\t\t\t\t\tvalue = JSON.stringify( value );\n\t\t\t\tvalue = encodeURIComponent( value );\n\n\t\t\t\tpairs.push( key+\"=\"+value );\n\t\t\t} );\n\t\treturn pairs.join( '&' );\n\t}\n\n\texport function getRequest(url:string, request?:{[key:string]:any}) : Promise<string>\n\t{\n\t\tif( request != null )\n\t\t{\n\t\t\tconst parms = stringifyParameters( request );\n\t\t\turl = `${url}?${parms}`;\n\t\t}\n\n\t\tconst ht = url.startsWith('https:') ? https : http;\n\t\tlet data = '';\n\t\treturn new Promise<string>( (resolve,reject)=>\n\t\t\t{\n\t\t\t\tht.get( url, (resp)=>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresp.on( 'data', (chunk)=>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdata += chunk;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tresp.on( 'end', ()=>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif( resp.statusCode != 200 ) // HTTP OK\n\t\t\t\t\t\t\t\t\t\treject( `Request failed with status code ${resp.statusCode}` );\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tresolve( data );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} )\n\t\t\t\t\t.on( 'error', (err)=>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t} );\n\t\t\t} );\n\t}\n\n\t// nb: ES5 incompatible ; requires \"Promise\" library\n\texport function postRequest<T>(url:string, request:{[key:string]:any}) : Promise<T>\n\t{\n\t\tlet requestStr = JSON.stringify( request );\n\t\treturn new Promise<T>( (resolve,reject)=>\n\t\t\t{\n\t\t\t\t$.ajax({\ttype\t\t: 'POST',\n\t\t\t\t\t\t\turl\t\t\t: url,\n\t\t\t\t\t\t\tcontentType\t: 'application/json',\n\t\t\t\t\t\t\tdata\t\t: requestStr,\n\t\t\t\t\t\t\tdataType\t: 'json',\n\t\t\t\t\t\t\tsuccess\t\t: (data,textStatus,jqXHR)=>resolve( data ),\n\t\t\t\t\t\t\terror\t\t: (jqXHR,textStatus,errorThrown)=>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\treject( textStatus );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t} );\n\t}\n}\n\nexport namespace html\n{\n\t/** TODO ! */\n\texport function showError(message:string) : void\n\t{\n\t\tconsole.error( message );\n\t}\n\n\t/** TODO ! */\n\texport function showMessage(message:string) : void\n\t{\n\t\talert( message );\n\t}\n\n\t/** Invoke jQuery.blockUI's '.block()' on the specified element but supports multiple invokation on the same element */\n\texport function block($e:JQuery) : JQuery\n\t{\n\t\t// Insert/increment a block counter as jQuery 'data()'\n\t\tvar blockCounter = ( $e.data('common_blockCounter')|0 ) + 1;\n\t\t$e.data( 'common_blockCounter', blockCounter );\n\n\t\tif( blockCounter == 1 )\n\t\t\t// This element is not blocked yet\n\t\t\t(<any>$e).block();  // TODO: ACA: jQuery.blockUI typings ...\n\n\t\treturn $e;\n\t}\n\n\t/** Invoke jQuery.blockUI's '.unblock()' on the specified element except if it has been block()ed more than once */\n\texport function unblock($e:JQuery) : JQuery\n\t{\n\t\t// Decrement the block counter in the jQuery 'data()'\n\t\tvar blockCounter = ( $e.data('common_blockCounter')|0 ) - 1;\n\t\t$e.data( 'common_blockCounter', blockCounter );\n\n\t\tif( blockCounter < 0 )\n\t\t{\n\t\t\t// There is a logic error somewhere...\n\t\t\tshowError( 'INTERNAL ERROR: Unblock count > block count: '+blockCounter );\n\n\t\t\t// Reset counter\n\t\t\tblockCounter = 0;\n\t\t\t$e.data( 'common_blockCounter', 0 );\n\t\t}\n\n\t\tif( blockCounter == 0 )\n\t\t\t// This element is no more blocked by anything else\n\t\t\t(<any>$e).unblock();  // TODO: ACA: jQuery.blockUI typings ...\n\n\t\treturn $e;\n\t}\n\n\texport function contextMenu($triggerControl:JQuery, items:{label:string,callback:()=>void}[]) : void\n\t{\n\t\t$triggerControl.contextmenu( ()=>\n\t\t\t{\n\t\t\t\tlet clickHandler\t: (evt:any)=>void = <any>null;\n\t\t\t\tlet closeMe\t\t\t: ()=>void = <any>null;\n\n\t\t\t\tconst $popup = $('<div style=\"z-index:999;position:absolute;padding:1px;background-color:white;border:1px solid black\"></div>');\n\t\t\t\titems.forEach( item=>\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = $('<div style=\"cursor:pointer;white-space:nowrap\"/>')\n\t\t\t\t\t\t\t\t.text( item.label )\n\t\t\t\t\t\t\t\t.click( ()=>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcloseMe();\n\t\t\t\t\t\t\t\t\t\titem.callback();\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t$popup.append( $item );\n\t\t\t\t\t} );\n\t\t\t\t$popup.insertAfter( $triggerControl );\n\n\t\t\t\tcloseMe = ()=>\n\t\t\t\t\t{\n\t\t\t\t\t\t$popup.remove();\n\n\t\t\t\t\t\t// Deactivate global click handler\n\t\t\t\t\t\t$(document).unbind( 'mouseup', clickHandler );\n\t\t\t\t\t};\n\t\t\t\tclickHandler = function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(\t(! $popup.is(evt.target))\n\t\t\t\t\t\t&&\t($popup.has(evt.target).length == 0) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Click not inside the popup\n\n\t\t\t\t\t\t\tif(\t($triggerControl.is(evt.target))\n\t\t\t\t\t\t\t||\t($triggerControl.has(evt.target).length != 0) )\n\t\t\t\t\t\t\t\t// Click inside the triggering button => Discard\n\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\tcloseMe();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t// Activate global click handler\n\t\t\t\t$(document).mouseup( clickHandler );\n\t\t\t} );\n\t}\n\n\texport class DropDownDiv\n\t{\n\t\tpublic readonly\t$triggerControl\t: JQuery;\n\t\tpublic readonly\t$content\t\t: JQuery;\n\t\tprivate\t\t\tshown\t\t\t: boolean;\n\t\tpublic readonly\t$popup\t\t\t: JQuery;\n\n\t\tpublic show\t: ()=>void;\n\t\tpublic hide\t: ()=>void;\n\n\t\tconstructor(p:{\t$triggerControl\t: JQuery,\n\t\t\t\t\t\t$content\t\t: JQuery,\n\t\t\t\t\t\tpopupTemplate?\t: string,\n\t\t\t\t\t})\n\t\t{\n\t\t\tvar self = this;\n\t\t\tthis.$triggerControl\t= p.$triggerControl;\n\t\t\tthis.$content\t\t\t= p.$content;\n\t\t\tvar popupTemplate\t\t= (p.popupTemplate != null) ? p.popupTemplate : '<div style=\"z-index:999;position:absolute;display:none;padding:1px\"></div>';\n\t\t\tself.shown\t\t\t\t= false;\n\t\t\tthis.$popup\t\t\t\t= $(popupTemplate)\n\t\t\t\t\t\t\t\t\t\t\t.append( self.$content )\n\t\t\t\t\t\t\t\t\t\t\t.insertAfter( self.$triggerControl );\n\n\t\t\tvar clickHandler = function(evt:any)\n\t\t\t\t{\n\t\t\t\t\tif(\t(! self.$popup.is(evt.target))\n\t\t\t\t\t&&\t(self.$popup.has(evt.target).length == 0) )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Click not inside the popup\n\n\t\t\t\t\t\tif(\t(self.$triggerControl.is(evt.target))\n\t\t\t\t\t\t||\t(self.$triggerControl.has(evt.target).length != 0) )\n\t\t\t\t\t\t\t// Click inside the triggering button => Discard\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tself.hide();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\tself.show = function()\n\t\t\t{\n\t\t\t\tif( self.shown )\n\t\t\t\t\t// Already shown\n\t\t\t\t\treturn;\n\t\t\t\tself.$popup.slideDown('fast');\n\n\t\t\t\t// Active click handler on the whole document\n\t\t\t\t$(document).mouseup( clickHandler );\n\n\t\t\t\tself.shown = true;\n\t\t\t};\n\n\t\tself.hide = function()\n\t\t\t{\n\t\t\t\tif(! self.shown )\n\t\t\t\t\t// Already hidden\n\t\t\t\t\treturn;\n\t\t\t\tself.$popup.slideUp('fast');\n\n\t\t\t\t// Deactivate global click handler\n\t\t\t\t$(document).unbind( 'mouseup', clickHandler );\n\n\t\t\t\tself.shown = false;\n\t\t\t};\n\n\t\tself.$triggerControl.on('click', function()\n\t\t\t{\n\t\t\t\tif( self.shown )\n\t\t\t\t\tself.hide();\n\t\t\t\telse\n\t\t\t\t\tself.show();\n\t\t\t} );\n\t\tself.$triggerControl.on('keyup',  function(evt:any)\n\t\t\t{\n\t\t\t\tif( evt.keyCode == 27 )  // ESC key pressed\n\t\t\t\t\tself.hide();\n\t\t\t\telse if( evt.keyCode == 40 )  // DOWN key pressed\n\t\t\t\t\tself.show();\n\t\t\t} );\n\t\t}\n\t}\n}\n\nexport namespace events\n{\n\texport interface EventsHandler\n\t{\n\t\tbind\t: (name:string, callback:(evt?:any,p?:any)=>void)=>EventsHandler;\n\t\tunbind\t: (name:string, callback?:(evt?:any,p?:any)=>void)=>EventsHandler;\n\t\ttrigger\t: (name:string, p?:any)=>EventsHandler;\n\t}\n\n\texport function createEventHandler() : EventsHandler\n\t{\n\t\treturn $({});\n\t}\n\n\t/** Creates an 'onXXX()' function for event binding */\n\texport function eventBind<Self,T>(eventName:string, events:EventsHandler, self:Self) : (callback:(p:T)=>void, p?:{executeOnce?:boolean})=>Self\n\t{\n\t\treturn function(callback:(p:T)=>void, pp?:{executeOnce?:boolean}) : Self\n\t\t{\n\t\t\tvar handler : (evt:any,p:T)=>void;\n\t\t\thandler = function(evt:any,p:T)\n\t\t\t\t{\n\t\t\t\t\tif( pp?.executeOnce == true )\n\t\t\t\t\t\t// Unregister myself\n\t\t\t\t\t\tevents.unbind( eventName, handler );\n\n\t\t\t\t\ttry { callback( p ); }\n\t\t\t\t\tcatch( ex ) { console.error( 'Unexpected error:', ex ); }\n\t\t\t\t};\n\t\t\tevents.bind( eventName, handler );\n\t\t\treturn self;\n\t\t};\n\t}\n\t/** Creates a 'triggerXXX()' function for event triggering */\n\texport function eventTrigger<T>(eventName:string, events:EventsHandler) : (p:T)=>void\n\t{\n\t\treturn function(p) : void\n\t\t\t{\n\t\t\t\tevents.trigger( eventName, p );\n\t\t\t};\n\t}\n} // namespace events\n","\nimport * as moment from 'moment';\n\nclass Log\n{\n\tpublic readonly\tparent?\t\t: Log;\n\tpublic readonly\tname\t\t: string;\n\tpublic readonly\tnameFull\t: string;\n\tpublic readonly\tlines\t\t: LogLine[];\n\n\tpublic readonly onLineAdded?: (name:string, date:Date, message:any[])=>void;\n\n\tconstructor(name:string, parent?:Log, onLineAdded?:(name:string, date:Date, message:any[])=>void)\n\t{\n\t\tthis.parent = parent;\n\t\tthis.name = name;\n\t\tthis.nameFull = this.getFullName();\n\t\tthis.lines = [];\n\n\t\tthis.onLineAdded = onLineAdded;\n\t}\n\n\tpublic log(...optionalParams: any[]) : void\n\t{\n\t\tlet args : any[] = Array.prototype.slice.call( arguments );\n\t\tlet line = { date:new Date(), message:args };\n\t\tthis.lines.push( line );\n\n\t\tif( this.onLineAdded != null )\n\t\t\tthis.onLineAdded( this.nameFull, line.date, line.message );\n\t}\n\n\tpublic logLines(text:string) : void\n\t{\n\t\tif( text == null )\n\t\t{\n\t\t\tthis.log( '<NULL>' );\t\n\t\t\treturn;\n\t\t}\n\t\tvar lines = text.split( '\\n' );\n\t\tfor( let i in lines )\n\t\t\tthis.log( lines[i] );\n\t}\n\n\tpublic exception(ex:any) : void\n\t{\n\t\tthis.log( '*** EXCEPTION:', ex );\n\t}\n\n\tpublic child(name:string) : Log\n\t{\n\t\tlet l = new Log( name, this, this.onLineAdded );\n\t\tthis.lines.push({ date:new Date(), child:l });\n\t\treturn l;\n\t}\n\n\tpublic output() : void\n\t{\n\t\tfor( let i in this.lines )\n\t\t{\n\t\t\tlet line = this.lines[i];\n\t\t\tif( line.child != null )\n\t\t\t{\n\t\t\t\tline.child.output();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet args = line.message.slice();\n\t\t\t\targs.unshift( this.nameFull+':' );\n\t\t\t\targs.unshift( dateString(line.date) );\n\t\t\t\tconsole.log.apply( console, args );\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getFullName() : string\n\t{\n\t\tlet name = this.name;\n\t\tfor( let l = this.parent; l != null; l = l.parent )\n\t\t\tname = l.name+'.'+name;\n\t\treturn name;\n\t}\n}\n\ntype LogLine = { date: Date,\tmessage\t: any[],\tchild?: never\t}\n\t\t\t | { date: Date,\tmessage?: never,\tchild : Log\t\t}\n\nfunction dateString(d:Date) : string\n{\n\treturn moment( d ).format( 'YYYY-MM-DD HH:mm:ss.SSS' );\n}\n\nexport default Log;\n","\r\nimport * as path from 'path';\r\nimport * as url from 'url';\r\nimport * as moment from 'moment';\r\nimport * as electron from 'electron';\r\nimport * as common from './common';\r\nimport * as Self from './testGui';\r\nimport Log from './logger';\r\n\r\nexport { humanFileSize } from './common';\r\n// nb: below are there only for use in the console:\r\nexports.require = require;\r\nexports.common = common;\r\n\r\nexport var config : {\r\n\t\t\t\t\t\thelloWho\t: string,\r\n\t\t\t\t\t};\r\nexport var $blockingDiv : JQuery;\r\nexport var log : Log;\r\nexport var koHelloWho\t: KnockoutObservable<string|null>;\r\n\r\nexport async function main(p:{\r\n\t\t\t\t\t\t\t$blockingDiv\t: JQuery,\r\n\t\t\t\t\t\t\t$appContainer\t: JQuery,\r\n\t\t\t\t\t\t}) : Promise<void>\r\n{\r\n\tself = this;\r\n\tlog = new Log( 'gui', /*parent*/undefined, /*onLineAdded*/(name,date,args)=>\r\n\t\t{\r\n\t\t\tconst a = args.slice();\r\n\t\t\ta.unshift( `${moment(date).format('HH:mm:ss.SSS')} ${name}:` );\r\n\t\t\tconsole.log.apply( console, a );\r\n\t\t} );\r\n\tlog.log( 'START' );\r\n\tcommon.init({ log });\r\n\t$blockingDiv\t= p.$blockingDiv;\r\n\tkoHelloWho\t\t= ko.observable( null );\r\n\r\n\tconst configFileName = path.basename( __filename ).replace( /\\.html$/, '.json' );\r\n\tconst configFilePath = path.join( __dirname, configFileName );\r\n\tlog.log( `Load config at '${configFilePath}'` );\r\n\tconfig = await common.readJSON({ filePath:configFilePath });\r\n\r\n\tko.applyBindings( self, p.$appContainer[0] );\r\n\tlog.log( 'END' );\r\n}\r\n\r\nexport async function clickHelloWho() : Promise<void>\r\n{\r\n\tconst log = Self.log.child( 'clickHelloWho' );\r\n\tlog.log( 'START' );\r\n\tcommon.html.block( $blockingDiv );\r\n\ttry\r\n\t{\r\n\t\tlog.log({ CWD:process.cwd() });\r\n\t\tkoHelloWho( `${config.helloWho} !` );\r\n\t}\r\n\tcatch( ex )\r\n\t{\r\n\t\tlog.exception( ex );\r\n\t}\r\n\tfinally\r\n\t{\r\n\t\tcommon.html.unblock( $blockingDiv );\r\n\t\tlog.log( 'END' );\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Entry points\r\nif( electron.app == null )\r\n{\r\n\t// Within HTML => Register this module as 'application'\r\n\t(<any>window)['application'] = this;\r\n}\r\nelse\r\n{\r\n\t// Within Electron CLI => Open window\r\n\telectron.app.once( 'ready', ()=>\r\n\t\t{\r\n\t\t\tlog = new Log( 'electron', /*parent*/undefined, /*onLineAdded*/(name,date,args)=>\r\n\t\t\t\t{\r\n\t\t\t\t\tconst a = args.slice();\r\n\t\t\t\t\ta.unshift( name+':' );\r\n\t\t\t\t\tconsole.log.apply( console, a );\r\n\t\t\t\t} );\r\n\r\n\t\t\t// Create a new window\r\n\t\t\tconst window = new electron.BrowserWindow({\twidth: 1024,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: 768,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitleBarStyle: 'hiddenInset',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\tconst loadPage = function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.loadURL( url.format({\r\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: path.join(__dirname, 'testGui.html'),\r\n\t\t\t\t\t\t\t\t\t\t\t\tprotocol: 'file:',\r\n\t\t\t\t\t\t\t\t\t\t\t\tslashes: true,\r\n\t\t\t\t\t\t\t\t\t\t\t}) );\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\tconst menu = new electron.Menu();\r\n\t\t\tmenu.append( new electron.MenuItem({ label:'show devtools', click:()=>{ window.webContents.openDevTools(); } }) );\r\n\t\t\tmenu.append( new electron.MenuItem({ label:'refresh', click:()=>{ loadPage(); } }) );\r\n\t\t\twindow.setMenu( menu );\r\n\r\n\t\t\twindow.webContents.openDevTools();\r\n\r\n\t\t\tloadPage();\r\n\t\t} );\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}